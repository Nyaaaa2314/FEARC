func bev::B000_MyUnit_Dmage() {
    bev::開始("evttest2", "ls_teststage00");
    bev::フェードイン(500);
    $0 = bev::番号取得("PID_プレイヤー女");
    bev::位置と向き($0, "D", "A");
    bev::動作($0, "WalkNormal");
    bev::全体待ち(600000);
    bev::フェードアウト(500);
    bev::終了();
}

func bev::B000_MyUnit_mage() {
    bev::開始("evttest2", "ls_teststage00");
    bev::フェードイン(500);
    $0 = bev::番号取得("PID_魔道士女");
    $1 = bev::番号取得("PID_賢者女");
    bev::位置と向き($1, "D", "D");
    bev::位置と向き($0, "E", "D");
    bev::動作($0, "Re");
    bev::動作($0, "Ge1");
    bev::動作($0, "Ge2");
    bev::動作($0, "Ge3");
    bev::動作($0, "Ge4");
    bev::動作($0, "Ge5");
    bev::動作($0, "Ge6");
    bev::動作($0, "Ge7");
    bev::動作($0, "Ge8");
    bev::動作($0, "Ge9");
    bev::動作($0, "Ge10");
    bev::動作($0, "Ge11");
    bev::動作($0, "Ge13");
    bev::動作($0, "Ge14");
    bev::動作($0, "Ge17");
    bev::動作($0, "Ge18");
    bev::動作($0, "Ge19");
    bev::動作($0, "Ge21");
    bev::動作($0, "Ge22");
    bev::動作($0, "Ge23");
    bev::動作($0, "Ge24");
    bev::動作($0, "Ge25");
    bev::動作($0, "Ge26");
    bev::動作($0, "Ge27");
    bev::動作($0, "Ge28");
    bev::動作($0, "Ge31");
    bev::動作($0, "Ge32");
    bev::動作($0, "Ge33");
    bev::動作($0, "Ge34");
    bev::動作($0, "Ge35");
    bev::動作($0, "Ge36");
    bev::動作($0, "ReHeadache");
    bev::動作($0, "Headache2");
    bev::動作($0, "Headache");
    bev::動作($0, "HeadacheWalk");
    bev::動作($0, "WalkTurn");
    bev::動作($0, "WalkTurnSh");
    bev::動作($0, "LookRest");
    bev::動作($0, "Droop");
    bev::動作($0, "Down");
    bev::動作($0, "CcRe");
    bev::動作($0, "CcBack");
    bev::動作($0, "Ac3");
    bev::動作($0, "Ac5");
    bev::動作($0, "Hug2");
    bev::動作($0, "Hug2Re");
    bev::動作($0, "WalkNormal");
    bev::動作($0, "Run");
    bev::動作($0, "Re");
    bev::動作($1, "Re");
    bev::動作($1, "Ge1");
    bev::動作($1, "Ge2");
    bev::動作($1, "Ge3");
    bev::動作($1, "Ge4");
    bev::動作($1, "Ge5");
    bev::動作($1, "Ge6");
    bev::動作($1, "Ge7");
    bev::動作($1, "Ge8");
    bev::動作($1, "Ge9");
    bev::動作($1, "Ge10");
    bev::動作($1, "Ge11");
    bev::動作($1, "Ge13");
    bev::動作($1, "Ge14");
    bev::動作($1, "Ge17");
    bev::動作($1, "Ge18");
    bev::動作($1, "Ge19");
    bev::動作($1, "Ge21");
    bev::動作($1, "Ge22");
    bev::動作($1, "Ge23");
    bev::動作($1, "Ge24");
    bev::動作($1, "Ge25");
    bev::動作($1, "Ge26");
    bev::動作($1, "Ge27");
    bev::動作($1, "Ge28");
    bev::動作($1, "Ge31");
    bev::動作($1, "Ge32");
    bev::動作($1, "Ge33");
    bev::動作($1, "Ge34");
    bev::動作($1, "Ge35");
    bev::動作($1, "Ge36");
    bev::動作($1, "ReHeadache");
    bev::動作($1, "Headache2");
    bev::動作($1, "Headache");
    bev::動作($1, "HeadacheWalk");
    bev::動作($1, "WalkTurn");
    bev::動作($1, "WalkTurnSh");
    bev::動作($1, "LookRest");
    bev::動作($1, "Droop");
    bev::動作($1, "Down");
    bev::動作($1, "CcRe");
    bev::動作($1, "CcBack");
    bev::動作($1, "Ac3");
    bev::動作($1, "Ac5");
    bev::動作($1, "Hug2");
    bev::動作($1, "Hug2Re");
    bev::動作($1, "WalkNormal");
    bev::動作($1, "Run");
    bev::動作($1, "Re");
    bev::全体待ち(600000);
    bev::フェードアウト(500);
    bev::終了();
}

func bev::B000_MyUnit_sist() {
    bev::開始("evttest2", "ls_teststage00");
    bev::フェードイン(500);
    $0 = bev::番号取得("PID_シスター女");
    $1 = bev::番号取得("PID_バトルシスター女");
    bev::位置と向き($1, "E", "D");
    bev::位置と向き($0, "D", "D");
    bev::動作($0, "Re");
    bev::動作($0, "Ge1");
    bev::動作($0, "Ge2");
    bev::動作($0, "Ge3");
    bev::動作($0, "Ge4");
    bev::動作($0, "Ge5");
    bev::動作($0, "Ge6");
    bev::動作($0, "Ge7");
    bev::動作($0, "Ge8");
    bev::動作($0, "Ge9");
    bev::動作($0, "Ge10");
    bev::動作($0, "Ge11");
    bev::動作($0, "Ge13");
    bev::動作($0, "Ge14");
    bev::動作($0, "Ge17");
    bev::動作($0, "Ge18");
    bev::動作($0, "Ge19");
    bev::動作($0, "Ge21");
    bev::動作($0, "Ge22");
    bev::動作($0, "Ge23");
    bev::動作($0, "Ge24");
    bev::動作($0, "Ge25");
    bev::動作($0, "Ge26");
    bev::動作($0, "Ge27");
    bev::動作($0, "Ge28");
    bev::動作($0, "Ge31");
    bev::動作($0, "Ge32");
    bev::動作($0, "Ge33");
    bev::動作($0, "Ge34");
    bev::動作($0, "Ge35");
    bev::動作($0, "Ge36");
    bev::動作($0, "ReHeadache");
    bev::動作($0, "Headache2");
    bev::動作($0, "Headache");
    bev::動作($0, "HeadacheWalk");
    bev::動作($0, "WalkTurn");
    bev::動作($0, "WalkTurnSh");
    bev::動作($0, "LookRest");
    bev::動作($0, "Droop");
    bev::動作($0, "Down");
    bev::動作($0, "CcRe");
    bev::動作($0, "CcBack");
    bev::動作($0, "Ac3");
    bev::動作($0, "Ac5");
    bev::動作($0, "Hug2");
    bev::動作($0, "Hug2Re");
    bev::動作($0, "Re");
    bev::動作($1, "Re");
    bev::動作($1, "Ge1");
    bev::動作($1, "Ge2");
    bev::動作($1, "Ge3");
    bev::動作($1, "Ge4");
    bev::動作($1, "Ge5");
    bev::動作($1, "Ge6");
    bev::動作($1, "Ge7");
    bev::動作($1, "Ge8");
    bev::動作($1, "Ge9");
    bev::動作($1, "Ge10");
    bev::動作($1, "Ge11");
    bev::動作($1, "Ge13");
    bev::動作($1, "Ge14");
    bev::動作($1, "Ge17");
    bev::動作($1, "Ge18");
    bev::動作($1, "Ge19");
    bev::動作($1, "Ge21");
    bev::動作($1, "Ge22");
    bev::動作($1, "Ge23");
    bev::動作($1, "Ge24");
    bev::動作($1, "Ge25");
    bev::動作($1, "Ge26");
    bev::動作($1, "Ge27");
    bev::動作($1, "Ge28");
    bev::動作($1, "Ge31");
    bev::動作($1, "Ge32");
    bev::動作($1, "Ge33");
    bev::動作($1, "Ge34");
    bev::動作($1, "Ge35");
    bev::動作($1, "Ge36");
    bev::動作($1, "ReHeadache");
    bev::動作($1, "Headache2");
    bev::動作($1, "Headache");
    bev::動作($1, "HeadacheWalk");
    bev::動作($1, "WalkTurn");
    bev::動作($1, "WalkTurnSh");
    bev::動作($1, "LookRest");
    bev::動作($1, "Droop");
    bev::動作($1, "Down");
    bev::動作($1, "CcRe");
    bev::動作($1, "CcBack");
    bev::動作($1, "Ac3");
    bev::動作($1, "Ac5");
    bev::動作($1, "Hug2");
    bev::動作($1, "Hug2Re");
    bev::動作($1, "Re");
    bev::全体待ち(600000);
    bev::フェードアウト(500);
    bev::終了();
}

func bev::B000_Marth_Dmage() {
    bev::開始("evttest2", "ls_teststage00");
    bev::フェードイン(500);
    $0 = bev::番号取得("PID_ダークマージ女");
    $1 = bev::番号取得("PID_ソーサラー女");
    bev::位置と向き($1, "E", "D");
    bev::位置と向き($0, "D", "D");
    bev::動作($0, "MarRe");
    bev::動作($0, "MarBatRe");
    bev::動作($0, "MarBatRe2");
    bev::動作($0, "MarBatRe3");
    bev::動作($0, "MarAc1");
    bev::動作($0, "MarGe1");
    bev::動作($0, "MarGe2");
    bev::動作($0, "MarGe3");
    bev::動作($0, "MarGe4");
    bev::動作($0, "MarGe5");
    bev::動作($0, "MarGe6");
    bev::動作($0, "MarGe7");
    bev::動作($0, "MarGe8");
    bev::動作($0, "MarGe9");
    bev::動作($0, "MarGe10");
    bev::動作($0, "MarGe11");
    bev::動作($0, "MarGe12");
    bev::動作($0, "MarTiredGe1");
    bev::動作($0, "MarTiredGe2");
    bev::動作($0, "MarTiredRe");
    bev::動作($0, "MarRe");
    bev::動作($1, "MarRe");
    bev::動作($1, "MarBatRe");
    bev::動作($1, "MarBatRe2");
    bev::動作($1, "MarBatRe3");
    bev::動作($1, "MarAc1");
    bev::動作($1, "MarGe1");
    bev::動作($1, "MarGe2");
    bev::動作($1, "MarGe3");
    bev::動作($1, "MarGe4");
    bev::動作($1, "MarGe5");
    bev::動作($1, "MarGe6");
    bev::動作($1, "MarGe7");
    bev::動作($1, "MarGe8");
    bev::動作($1, "MarGe9");
    bev::動作($1, "MarGe10");
    bev::動作($1, "MarGe11");
    bev::動作($1, "MarGe12");
    bev::動作($1, "MarTiredGe1");
    bev::動作($1, "MarTiredGe2");
    bev::動作($1, "MarTiredRe");
    bev::動作($1, "MarRe");
    bev::全体待ち(600000);
    bev::フェードアウト(500);
    bev::終了();
}

func bev::B000_Marth_mage() {
    bev::開始("evttest2", "ls_teststage00");
    bev::フェードイン(500);
    $0 = bev::番号取得("PID_魔道士女");
    $1 = bev::番号取得("PID_賢者女");
    bev::位置と向き($1, "D", "D");
    bev::位置と向き($0, "E", "D");
    bev::動作($0, "MarRe");
    bev::動作($0, "MarBatRe");
    bev::動作($0, "MarBatRe2");
    bev::動作($0, "MarBatRe3");
    bev::動作($0, "MarAc1");
    bev::動作($0, "MarGe1");
    bev::動作($0, "MarGe2");
    bev::動作($0, "MarGe3");
    bev::動作($0, "MarGe4");
    bev::動作($0, "MarGe5");
    bev::動作($0, "MarGe6");
    bev::動作($0, "MarGe7");
    bev::動作($0, "MarGe8");
    bev::動作($0, "MarGe9");
    bev::動作($0, "MarGe10");
    bev::動作($0, "MarGe11");
    bev::動作($0, "MarGe12");
    bev::動作($0, "MarTiredGe1");
    bev::動作($0, "MarTiredGe2");
    bev::動作($0, "MarTiredRe");
    bev::動作($0, "MarRe");
    bev::動作($1, "MarRe");
    bev::動作($1, "MarBatRe");
    bev::動作($1, "MarBatRe2");
    bev::動作($1, "MarBatRe3");
    bev::動作($1, "MarAc1");
    bev::動作($1, "MarGe1");
    bev::動作($1, "MarGe2");
    bev::動作($1, "MarGe3");
    bev::動作($1, "MarGe4");
    bev::動作($1, "MarGe5");
    bev::動作($1, "MarGe6");
    bev::動作($1, "MarGe7");
    bev::動作($1, "MarGe8");
    bev::動作($1, "MarGe9");
    bev::動作($1, "MarGe10");
    bev::動作($1, "MarGe11");
    bev::動作($1, "MarGe12");
    bev::動作($1, "MarTiredGe1");
    bev::動作($1, "MarTiredGe2");
    bev::動作($1, "MarTiredRe");
    bev::動作($1, "MarRe");
    bev::全体待ち(600000);
    bev::フェードアウト(500);
    bev::終了();
}

func bev::B000_Marth_sist() {
    bev::開始("evttest2", "ls_teststage00");
    bev::フェードイン(500);
    $0 = bev::番号取得("PID_シスター女");
    $1 = bev::番号取得("PID_バトルシスター女");
    bev::位置と向き($1, "E", "D");
    bev::位置と向き($0, "D", "D");
    bev::動作($0, "MarRe");
    bev::動作($0, "MarBatRe");
    bev::動作($0, "MarBatRe2");
    bev::動作($0, "MarBatRe3");
    bev::動作($0, "MarAc1");
    bev::動作($0, "MarGe1");
    bev::動作($0, "MarGe2");
    bev::動作($0, "MarGe3");
    bev::動作($0, "MarGe4");
    bev::動作($0, "MarGe5");
    bev::動作($0, "MarGe6");
    bev::動作($0, "MarGe7");
    bev::動作($0, "MarGe8");
    bev::動作($0, "MarGe9");
    bev::動作($0, "MarGe10");
    bev::動作($0, "MarGe11");
    bev::動作($0, "MarGe12");
    bev::動作($0, "MarTiredGe1");
    bev::動作($0, "MarTiredGe2");
    bev::動作($0, "MarTiredRe");
    bev::動作($0, "MarRe");
    bev::動作($1, "MarRe");
    bev::動作($1, "MarBatRe");
    bev::動作($1, "MarBatRe2");
    bev::動作($1, "MarBatRe3");
    bev::動作($1, "MarAc1");
    bev::動作($1, "MarGe1");
    bev::動作($1, "MarGe2");
    bev::動作($1, "MarGe3");
    bev::動作($1, "MarGe4");
    bev::動作($1, "MarGe5");
    bev::動作($1, "MarGe6");
    bev::動作($1, "MarGe7");
    bev::動作($1, "MarGe8");
    bev::動作($1, "MarGe9");
    bev::動作($1, "MarGe10");
    bev::動作($1, "MarGe11");
    bev::動作($1, "MarGe12");
    bev::動作($1, "MarTiredGe1");
    bev::動作($1, "MarTiredGe2");
    bev::動作($1, "MarTiredRe");
    bev::動作($1, "MarRe");
    bev::全体待ち(600000);
    bev::フェードアウト(500);
    bev::終了();
}

func bev::B000_Marth() {
    bev::開始("evttest2", "ls_teststage00");
    bev::フェードイン(500);
    $0 = bev::番号取得("PID_マルス");
    bev::位置と向き($0, "D", "A");
    bev::動作($0, "MarRe");
    bev::動作($0, "MarBatRe");
    bev::動作($0, "MarBatRe2");
    bev::動作($0, "MarBatRe3");
    bev::動作($0, "MarGe1");
    bev::動作($0, "MarGe2");
    bev::動作($0, "MarGe3");
    bev::動作($0, "MarGe4");
    bev::動作($0, "MarGe5");
    bev::動作($0, "MarGe6");
    bev::動作($0, "MarGe7");
    bev::動作($0, "MarGe8");
    bev::動作($0, "MarGe9");
    bev::動作($0, "MarGe10");
    bev::動作($0, "MarGe11");
    bev::動作($0, "MarGe12");
    bev::動作($0, "MarTiredGe1");
    bev::動作($0, "MarTiredGe2");
    bev::動作($0, "MarTiredRe");
    bev::動作($0, "MarRe");
    bev::全体待ち(600000);
    bev::フェードアウト(500);
    bev::終了();
}

func bev::B000_Liz_sist() {
    bev::開始("evttest2", "ls_teststage00");
    bev::フェードイン(500);
    $0 = bev::番号取得("PID_賢者女");
    $1 = bev::番号取得("PID_バトルシスター女");
    bev::位置と向き($1, "D", "A");
    bev::位置と向き($0, "E", "A");
    bev::動作($0, "RizRe");
    bev::動作($0, "RizAc1");
    bev::動作($0, "RizAc2");
    bev::動作($0, "RizAc3");
    bev::動作($0, "RizAc4");
    bev::動作($0, "RizAc5");
    bev::動作($0, "RizAc6");
    bev::動作($0, "RizAc7");
    bev::動作($0, "RizAc8");
    bev::動作($0, "RizAc9");
    bev::動作($0, "RizAc10");
    bev::動作($0, "RizAc11");
    bev::動作($0, "RizAc12");
    bev::動作($0, "RizAc13");
    bev::動作($0, "RizAc14");
    bev::動作($0, "RizAc15");
    bev::動作($0, "RizAngry");
    bev::動作($0, "RizLookOver");
    bev::動作($0, "RizPeep");
    bev::動作($0, "RizPoint");
    bev::動作($0, "RizReShock");
    bev::動作($0, "RizReStagger");
    bev::動作($0, "RizShockBack");
    bev::動作($0, "RizShockWait");
    bev::動作($0, "RizThank");
    bev::動作($0, "RizWalk2");
    bev::動作($0, "RizWalk3");
    bev::動作($0, "RizStagger");
    bev::動作($1, "RizRe");
    bev::動作($1, "RizAc1");
    bev::動作($1, "RizAc2");
    bev::動作($1, "RizAc3");
    bev::動作($1, "RizAc4");
    bev::動作($1, "RizAc5");
    bev::動作($1, "RizAc6");
    bev::動作($1, "RizAc7");
    bev::動作($1, "RizAc8");
    bev::動作($1, "RizAc9");
    bev::動作($1, "RizAc10");
    bev::動作($1, "RizAc11");
    bev::動作($1, "RizAc12");
    bev::動作($1, "RizAc13");
    bev::動作($1, "RizAc14");
    bev::動作($1, "RizAc15");
    bev::動作($1, "RizAngry");
    bev::動作($1, "RizLookOver");
    bev::動作($1, "RizPeep");
    bev::動作($1, "RizPoint");
    bev::動作($1, "RizReShock");
    bev::動作($1, "RizReStagger");
    bev::動作($1, "RizShockBack");
    bev::動作($1, "RizShockWait");
    bev::動作($1, "RizThank");
    bev::動作($1, "RizWalk2");
    bev::動作($1, "RizWalk3");
    bev::動作($1, "RizStagger");
    bev::全体待ち(600000);
    bev::フェードアウト(500);
    bev::終了();
}

func bev::B000_TEST() {
    bev::開始("evttest", "ls_teststage00");
    bev::フェードイン(500);
    $0 = bev::番号取得("PID_クロム");
    $1 = bev::番号取得("PID_リズ");
    $2 = bev::番号取得("PID_プレイヤー");
    $3 = bev::番号取得("PID_フレデリク");
    $4 = bev::番号取得("PID_エメリナ");
    $5 = bev::番号取得("PID_フィレイン");
    bev::位置と向き($0, "B", "A");
    bev::位置と向き($1, "C", "A");
    bev::位置と向き($3, "D", "A");
    bev::位置と向き($4, "E", "A");
    bev::位置と向き($2, "F", "A");
    bev::位置と向き($5, "G", "A");
    bev::全体待ち(600000);
    bev::フェードアウト(500);
    bev::終了();
}

func bev::B000_TEST2() {
    bev::開始("evttest", "ls_teststage00");
    bev::フェードイン(500);
    $0 = bev::番号取得("PID_クロム");
    $1 = bev::番号取得("PID_リズ");
    $2 = bev::番号取得("PID_マリアベル");
    $3 = bev::番号取得("PID_ヴェイク");
    $4 = bev::番号取得("PID_スミア");
    $5 = bev::番号取得("PID_カラム");
    bev::位置と向き($0, "B", "A");
    bev::位置と向き($1, "C", "A");
    bev::位置と向き($2, "D", "A");
    bev::位置と向き($3, "E", "A");
    bev::位置と向き($4, "F", "A");
    bev::位置と向き($5, "G", "A");
    bev::全体待ち(600000);
    bev::フェードアウト(500);
    bev::終了();
}

func bev::B000_TEST3() {
    bev::開始("evttest", "ls_teststage00");
    bev::フェードイン(500);
    $0 = bev::番号取得("PID_クロム");
    $1 = bev::番号取得("PID_リズ");
    $2 = bev::番号取得("PID_ソール");
    $3 = bev::番号取得("PID_ベルベット");
    $4 = bev::番号取得("PID_仮面マルス");
    $5 = bev::番号取得("PID_バジーリオ");
    bev::位置と向き($0, "B", "A");
    bev::位置と向き($1, "C", "A");
    bev::位置と向き($2, "D", "A");
    bev::位置と向き($3, "E", "A");
    bev::位置と向き($4, "F", "A");
    bev::位置と向き($5, "G", "A");
    bev::全体待ち(600000);
    bev::フェードアウト(500);
    bev::終了();
}

func bev::B000_TEST4() {
    bev::開始("evttest", "ls_teststage00");
    bev::フェードイン(500);
    $0 = bev::番号取得("PID_クロム");
    $1 = bev::番号取得("PID_リズ");
    $2 = bev::番号取得("PID_フラヴィア");
    $3 = bev::番号取得("PID_ロンクー");
    $4 = bev::番号取得("PID_ギャンレル");
    $5 = bev::番号取得("PID_インバース");
    bev::位置と向き($0, "B", "A");
    bev::位置と向き($1, "C", "A");
    bev::位置と向き($2, "D", "A");
    bev::位置と向き($3, "E", "A");
    bev::位置と向き($4, "F", "A");
    bev::位置と向き($5, "G", "A");
    bev::全体待ち(600000);
    bev::フェードアウト(500);
    bev::終了();
}

func bev::B000_TEST5() {
    bev::開始("evttest", "ls_teststage00");
    bev::フェードイン(500);
    $0 = bev::番号取得("PID_クロム");
    $1 = bev::番号取得("PID_リズ");
    $2 = bev::番号取得("PID_リヒト");
    $3 = bev::番号取得("PID_サイリ");
    $4 = bev::番号取得("PID_ヴァルトルート");
    $5 = bev::番号取得("PID_ファウダー");
    bev::位置と向き($0, "B", "A");
    bev::位置と向き($1, "C", "A");
    bev::位置と向き($2, "D", "A");
    bev::位置と向き($3, "E", "A");
    bev::位置と向き($4, "F", "A");
    bev::位置と向き($5, "G", "A");
    bev::全体待ち(600000);
    bev::フェードアウト(500);
    bev::終了();
}

func bev::B000_TEST6() {
    bev::開始("evttest", "ls_teststage00");
    bev::フェードイン(500);
    $0 = bev::番号取得("PID_クロム");
    $1 = bev::番号取得("PID_マルス");
    $2 = bev::番号取得("PID_オリヴィエ");
    $3 = bev::番号取得("PID_ソワレ");
    $4 = bev::番号取得("PID_セルジュ");
    $5 = bev::番号取得("PID_ヴィオール");
    bev::位置と向き($0, "B", "A");
    bev::位置と向き($1, "D", "A");
    bev::位置と向き($2, "E", "A");
    bev::位置と向き($3, "F", "A");
    bev::位置と向き($4, "G", "A");
    bev::位置と向き($5, "G", "A");
    bev::全体待ち(600000);
    bev::フェードアウト(500);
    bev::終了();
}

func bev::B000_TE_M_mage() {
    bev::開始("evttest2", "ls_teststage00");
    bev::フェードイン(500);
    $0 = bev::番号取得("PID_賢者男");
    $1 = bev::番号取得("PID_魔道士男");
    bev::位置と向き($1, "D", "A");
    bev::位置と向き($0, "E", "A");
    bev::動作($0, "ReHeadache");
    bev::動作($0, "Headache2");
    bev::動作($0, "Headache");
    bev::動作($0, "HeadacheWalk");
    bev::動作($0, "WalkTurn");
    bev::動作($0, "WalkTurnSh");
    bev::動作($0, "IdleDying");
    bev::動作($0, "LookRest");
    bev::動作($0, "Droop");
    bev::動作($0, "Down");
    bev::動作($0, "Down");
    bev::動作($0, "CcRe");
    bev::動作($0, "CcBack");
    bev::動作($0, "TurnL");
    bev::動作($0, "TurnLWait");
    bev::動作($0, "TurnLBack");
    bev::動作($0, "TurnR");
    bev::動作($0, "TurnRWait");
    bev::動作($0, "TurnRBack");
    bev::動作($0, "Down2Normal");
    bev::動作($0, "Re");
    bev::動作($1, "ReHeadache");
    bev::動作($1, "Headache2");
    bev::動作($1, "Headache");
    bev::動作($1, "HeadacheWalk");
    bev::動作($1, "WalkTurn");
    bev::動作($1, "WalkTurnSh");
    bev::動作($1, "IdleDying");
    bev::動作($1, "LookRest");
    bev::動作($1, "Droop");
    bev::動作($1, "Down");
    bev::動作($1, "CcRe");
    bev::動作($1, "CcBack");
    bev::動作($1, "TurnL");
    bev::動作($1, "TurnLWait");
    bev::動作($1, "TurnLBack");
    bev::動作($1, "TurnR");
    bev::動作($1, "TurnRWait");
    bev::動作($1, "TurnRBack");
    bev::動作($1, "Down2Normal");
    bev::動作($1, "Re");
    bev::全体待ち(600000);
    bev::フェードアウト(500);
    bev::終了();
}

func bev::B000_TE_M_sis() {
    bev::開始("evttest2", "ls_teststage00");
    bev::フェードイン(500);
    $0 = bev::番号取得("PID_僧侶男");
    $1 = bev::番号取得("PID_バトルモンク男");
    bev::位置と向き($1, "D", "A");
    bev::位置と向き($0, "E", "A");
    bev::動作($0, "ReHeadache");
    bev::動作($0, "Headache2");
    bev::動作($0, "Headache");
    bev::動作($0, "HeadacheWalk");
    bev::動作($0, "WalkTurn");
    bev::動作($0, "WalkTurnSh");
    bev::動作($0, "IdleDying");
    bev::動作($0, "LookRest");
    bev::動作($0, "Droop");
    bev::動作($0, "Down");
    bev::動作($0, "Down");
    bev::動作($0, "CcRe");
    bev::動作($0, "CcBack");
    bev::動作($0, "TurnL");
    bev::動作($0, "TurnLWait");
    bev::動作($0, "TurnLBack");
    bev::動作($0, "TurnR");
    bev::動作($0, "TurnRWait");
    bev::動作($0, "TurnRBack");
    bev::動作($0, "Down2Normal");
    bev::動作($0, "Re");
    bev::動作($1, "ReHeadache");
    bev::動作($1, "Headache2");
    bev::動作($1, "Headache");
    bev::動作($1, "HeadacheWalk");
    bev::動作($1, "WalkTurn");
    bev::動作($1, "WalkTurnSh");
    bev::動作($1, "IdleDying");
    bev::動作($1, "LookRest");
    bev::動作($1, "Droop");
    bev::動作($1, "Down");
    bev::動作($1, "CcRe");
    bev::動作($1, "CcBack");
    bev::動作($1, "TurnL");
    bev::動作($1, "TurnLWait");
    bev::動作($1, "TurnLBack");
    bev::動作($1, "TurnR");
    bev::動作($1, "TurnRWait");
    bev::動作($1, "TurnRBack");
    bev::動作($1, "Down2Normal");
    bev::動作($1, "Re");
    bev::全体待ち(600000);
    bev::フェードアウト(500);
    bev::終了();
}

func bev::B000_TE_M_Dmage() {
    bev::開始("evttest2", "ls_teststage00");
    bev::フェードイン(500);
    $0 = bev::番号取得("PID_ダークマージ男");
    $1 = bev::番号取得("PID_ソーサラー男");
    bev::位置と向き($1, "D", "A");
    bev::位置と向き($0, "E", "A");
    bev::動作($0, "ReHeadache");
    bev::動作($0, "Headache2");
    bev::動作($0, "Headache");
    bev::動作($0, "HeadacheWalk");
    bev::動作($0, "WalkTurn");
    bev::動作($0, "WalkTurnSh");
    bev::動作($0, "IdleDying");
    bev::動作($0, "LookRest");
    bev::動作($0, "Droop");
    bev::動作($0, "Down");
    bev::動作($0, "Down");
    bev::動作($0, "CcRe");
    bev::動作($0, "CcBack");
    bev::動作($0, "TurnL");
    bev::動作($0, "TurnLWait");
    bev::動作($0, "TurnLBack");
    bev::動作($0, "TurnR");
    bev::動作($0, "TurnRWait");
    bev::動作($0, "TurnRBack");
    bev::動作($0, "Down2Normal");
    bev::動作($0, "Re");
    bev::動作($1, "ReHeadache");
    bev::動作($1, "Headache2");
    bev::動作($1, "Headache");
    bev::動作($1, "HeadacheWalk");
    bev::動作($1, "WalkTurn");
    bev::動作($1, "WalkTurnSh");
    bev::動作($1, "IdleDying");
    bev::動作($1, "LookRest");
    bev::動作($1, "Droop");
    bev::動作($1, "Down");
    bev::動作($1, "CcRe");
    bev::動作($1, "CcBack");
    bev::動作($1, "TurnL");
    bev::動作($1, "TurnLWait");
    bev::動作($1, "TurnLBack");
    bev::動作($1, "TurnR");
    bev::動作($1, "TurnRWait");
    bev::動作($1, "TurnRBack");
    bev::動作($1, "Down2Normal");
    bev::動作($1, "Re");
    bev::全体待ち(600000);
    bev::フェードアウト(500);
    bev::終了();
}

func bev::TestField() {
    bev::開始("evtx001_op1", "拠点_広めのホール");
    bev::フェードイン(2000);
    bev::カメラ("自動");
    bev::場面("剣の墓");
    bev::全体待ち(2000);
    bev::会話("MID_X021_OP1");
    bev::フェードアウト(1000);
    bev::終了();
}

func fn18(v0) {
    format("%s", v0);
    bev::開始(0, v0);
    bev::フェードイン(0);
    bev::全体待ち(500);
    bev::終了();
}

func bev::B全背景() {
    fn18("マイルーム");
    fn18("武器屋の店内");
    fn18("行商人のテント");
    fn18("軍師のテント");
    fn18("拠点_広めのホール");
    fn18("賢者の部屋");
    fn18("夜の物置");
    fn18("スリラーハウス");
    fn18("エメラルド遺跡");
    fn18("古墳遺跡");
    fn18("緑の街道_平地");
    fn18("緑の街道_林");
    fn18("緑の街道_１マス砦");
    fn18("緑の街道_低い山");
    fn18("緑の街道_川の中");
    fn18("緑の街道_街道");
    fn18("緑の街道_橋");
    fn18("緑の街道_海岸線");
    fn18("緑の街道_城跡");
    fn18("緑の街道_神殿跡地");
    fn18("緑の街道_村");
    fn18("緑の街道_平地_Y軸回転");
    fn18("襲撃の町_橋");
    fn18("襲撃の町_水路");
    fn18("襲撃の町_橋_鎮火");
    fn18("襲撃されてない町_橋");
    fn18("神龍の聖地_草地");
    fn18("ミラの大樹_ふもと");
    fn18("氷の遺跡");
    fn18("はじまりの山_平地");
    fn18("はじまりの山_１マス砦");
    fn18("虹の降る山_平地");
    fn18("飛竜の谷_平地");
    fn18("飛竜の谷_１マス砦");
    fn18("北の国から_平地");
    fn18("北の国から_石畳");
    fn18("北の国から_雪解け");
    fn18("北の国から_夜の平地");
    fn18("フェリア不凍港_床");
    fn18("フェリア城_イベント大広間");
    fn18("港町キール_床");
    fn18("港町キール_砂浜");
    fn18("邪竜ギムレーの背中");
    fn18("シュヴァイン要塞_平地");
    fn18("シュヴァイン要塞_床");
    fn18("ヴァルキャッスル門_平地");
    fn18("ヴァルキャッスル_床");
    fn18("ヴァルキャッスル_王座");
    fn18("イーリス城_床");
    fn18("イーリス城_夜の中庭");
    fn18("イーリス城_イベント大広間");
    fn18("闇の祭壇前");
    fn18("闇の祭壇内部_床");
    fn18("闇の祭壇内部_イベント用");
    fn18("竜の祭壇");
    fn18("崖の道_平地");
    fn18("ペレジア城内_床");
    fn18("ペレジアの砦_床");
    fn18("ペレジア灼熱荒野_平地");
    fn18("ペレジアのオアシス");
    fn18("砂漠の１マス砦_快晴");
    fn18("砂漠の１マス砦_涙雨");
    fn18("砂漠の１マス砦_ドラマチック");
    fn18("ギム骨城_平地");
    fn18("雨ふる骨荒野_荒野");
    fn18("決戦ペレジア荒野_荒野");
    fn18("夜の谷間荒野_平地");
    fn18("夜の谷間荒野_橋");
    fn18("夜の谷間荒野_砦");
    fn18("闘技場_床");
    fn18("闘技場_床_無人");
    fn18("闘技場_床_軽量版");
    fn18("ドーマの臓物_岩");
    fn18("まぼろしのコロシアム");
    fn18("暗闇_何もなし");
    fn18("暗闇_薄い床つき");
    fn18("暗闇_カードの世界");
    fn18("万里　平地");
    fn18("万里　床");
    fn18("海戦の海_海上");
    fn18("海戦の海_船上");
    fn18("森_夜_通常");
    fn18("森_夜_焚き火EV");
    fn18("森_夜_焚き火EV炎ミニ");
    fn18("森_夜_廃村");
    fn18("山火事森_夜_平地");
    fn18("山火事森_夜_林");
    fn18("山火事森_夜_１マス砦");
    fn18("山道_平地");
    fn18("山道_崖");
    fn18("山道_１マス砦");
    fn18("山道_林");
    fn18("山道_火山が見える平地");
    fn18("サンセット_平地");
    fn18("サンセット_林");
    fn18("サンセット_１マス砦");
    fn18("サンセット_低い山");
    fn18("サンセット_海岸線");
    fn18("サンセット_ドーマ砦");
    fn18("嵐の夜_平地");
    fn18("嵐の夜_林");
    fn18("嵐の夜_１マス砦");
    fn18("嵐の夜_低い山");
    fn18("嵐の夜_海岸線");
    fn18("軍師の書斎_デスクトップ");
    fn18("イベント_Ev_024_ED1_2");
    fn18("イベント_Ev_016_ED1_04");
    fn18("イベント_Ev_018_OP2_03");
}

func fn20(v0) {
    bev::開始(0, v0);
    bev::カメラ("GPUBUG");
    bev::フェードイン(0);
    bev::全体待ち(480000);
    bev::終了();
}

func bev::Bスリラーハウス() {
    bev::開始(0, "スリラーハウス");
    bev::カメラ("GPUBUG");
    bev::フェードイン(0);
    bev::全体待ち(2147418112);
    bev::全体待ち(2147418112);
    bev::全体待ち(2147418112);
    bev::終了();
}

func bev::B影投影テスト() {
    fn20("軍師のテント");
    fn20("拠点_広めのホール");
    fn20("夜の物置");
    fn20("スリラーハウス");
    fn20("エメラルド遺跡");
    fn20("古墳遺跡");
    fn20("緑の街道_平地");
    fn20("緑の街道_林");
    fn20("緑の街道_１マス砦");
    fn20("緑の街道_低い山");
    fn20("緑の街道_街道");
    fn20("緑の街道_橋");
    fn20("緑の街道_海岸線");
    fn20("緑の街道_城跡");
    fn20("緑の街道_神殿跡地");
    fn20("緑の街道_村");
    fn20("緑の街道_平地_Y軸回転");
    fn20("襲撃の町_橋");
    fn20("襲撃の町_橋_鎮火");
    fn20("襲撃されてない町_橋");
    fn20("神龍の聖地_草地");
    fn20("ミラの大樹_ふもと");
    fn20("氷の遺跡");
    fn20("はじまりの山_平地");
    fn20("はじまりの山_１マス砦");
    fn20("虹の降る山_平地");
    fn20("飛竜の谷_平地");
    fn20("飛竜の谷_１マス砦");
    fn20("北の国から_平地");
    fn20("北の国から_石畳");
    fn20("北の国から_雪解け");
    fn20("北の国から_夜の平地");
    fn20("フェリア不凍港_床");
    fn20("フェリア城_イベント大広間");
    fn20("港町キール_床");
    fn20("港町キール_砂浜");
    fn20("シュヴァイン要塞_平地");
    fn20("シュヴァイン要塞_床");
    fn20("ヴァルキャッスル門_平地");
    fn20("イーリス城_床");
    fn20("イーリス城_夜の中庭");
    fn20("イーリス城_イベント大広間");
    fn20("闇の祭壇前");
    fn20("闇の祭壇内部_床");
    fn20("闇の祭壇内部_イベント用");
    fn20("ペレジア城内_床");
    fn20("ペレジアの砦_床");
    fn20("ペレジア灼熱荒野_平地");
    fn20("ペレジアのオアシス");
    fn20("砂漠の１マス砦_快晴");
    fn20("砂漠の１マス砦_涙雨");
    fn20("砂漠の１マス砦_ドラマチック");
    fn20("ギム骨城_平地");
    fn20("夜の谷間荒野_平地");
    fn20("夜の谷間荒野_橋");
    fn20("夜の谷間荒野_砦");
    fn20("闘技場_床");
    fn20("闘技場_床_無人");
    fn20("闘技場_床_軽量版");
    fn20("森_夜_通常");
    fn20("森_夜_焚き火EV");
    fn20("森_夜_焚き火EV炎ミニ");
    fn20("森_夜_廃村");
    fn20("山火事森_夜_平地");
    fn20("山火事森_夜_林");
    fn20("山火事森_夜_１マス砦");
    fn20("山道_平地");
    fn20("山道_１マス砦");
    fn20("山道_火山が見える平地");
    fn20("サンセット_平地");
    fn20("サンセット_林");
    fn20("サンセット_１マス砦");
    fn20("サンセット_低い山");
    fn20("サンセット_海岸線");
    fn20("サンセット_ドーマ砦");
    fn20("嵐の夜_平地");
    fn20("嵐の夜_林");
    fn20("嵐の夜_１マス砦");
    fn20("嵐の夜_低い山");
    fn20("嵐の夜_海岸線");
}

event [6]() {
    ev::FlagEntry("戦闘会話");
}

event [7]() {
    ev::ChapterSetWinRule(458752);
    ev::PersonLoad(ev::ChapterGetName());
    ev::PersonLoad("aDebug");
    ev::TerrainLoad(ev::ChapterGetName());
    ev::DisposLoad(ev::ChapterGetName());
    ev::Dispos("Player", 4);
    ev::Dispos("Enemy", 4);
}

event [8]() {
    ev::DisposFree();
    ev::TerrainFree();
    ev::PersonFree("aDebug");
    ev::PersonFree(ev::ChapterGetName());
}

event [9]() {
    ev::GoldGainSilent(0, 10000);
    ev::TutorialSetFlagAll();
}

event [10]() {}

event [11]() {
    ev::ChapterSetNext("CID_000");
}

event [12](2, 2, 0) {
    format("%d", ev::GoldGet());
}

event [12](3, 3, 0) {}

event [18]("PID_クロム", "PID_アンナ", 1, "") {}

event [18]("PID_クロム", "PID_カラム", 1, "") {}

event [18]("PID_クロム", "PID_ギャンレル", 1, "") {}

event [19]("PID_000_ボス", "", 1, "戦闘会話") {
    ev::Talk("MID_000_BATTLE");
    ev::FlagSet("戦闘会話");
}

event [21]("PID_000_ボス", 1, "") {
    ev::Talk("MID_000_DIE");
}
