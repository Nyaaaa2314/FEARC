func bev::B003_OP1() {
    bev::フェードイン(2000);
    ev::LSEPlay("SE_ENV_WIND2", 2000);
    bev::場面("MCID_T_003");
    bev::テロップ再生("Tlp_Ev_003_OP1");
    bev::カメラ("op1_01cam");
    bev::全体待ち(2000);
    bev::会話("MID_003_OP1");
    bev::会話("MID_003_OP1_2");
    bev::会話("MID_003_OP1_3");
    ev::LSEStop("SE_ENV_WIND2", 1000);
    bev::フェードアウト(1000);
    bev::テロップ終了();
}

func bev::B003_OP1_TUT() {
    bev::開始("evt003_op1", "万里　平地");
    bev::フェードイン(1000);
    ev::LSEPlay("SE_ENV_WIND2", 1000);
    bev::場面("MCID_T_003");
    bev::カメラ("op1_01cam");
    bev::全体待ち(2000);
    bev::会話("MID_003_OP1_TUT");
    ev::LSEStop("SE_ENV_WIND2", 1000);
    bev::フェードアウト(1000);
    bev::終了();
}

func bev::B003_ED1() {
    bev::開始("evt003_ed1", "万里　床");
    bev::フェードイン(1000);
    ev::BGMPlay("STRM_BGM_EVT_BRAVE1", 0);
    bev::カメラ("ed1_00cam");
    bev::場面("MCID_T_003");
    $0 = bev::番号取得("PID_プレイヤー");
    $1 = bev::番号取得("PID_クロム");
    $2 = bev::番号取得("PID_フレデリク");
    $3 = bev::番号取得("PID_リズ");
    $4 = bev::番号取得("PID_003_ボス");
    bev::位置と向き($4, "E", "B");
    bev::位置と向き($3, "C", "E");
    bev::位置と向き($0, "A", "E");
    bev::位置と向き($2, "D", "E");
    bev::位置と向き($1, "B", "E");
    bev::動作($3, "RizRe");
    bev::動作($2, "FreRe");
    bev::全体待ち(7500);
    bev::カメラ("ed1_01cam");
    bev::会話("MID_003_ED1");
    bev::歩く($4, "F");
    bev::全体待ち(500);
    bev::会話("MID_003_ED1_02");
    bev::会話("MID_003_ED1_03");
    bev::全体待ち(500);
    bev::注目($2, 0);
    bev::待つ($3, 400);
    bev::歩く($3, "G");
    bev::歩く($1, "H");
    bev::待つ($0, 200);
    bev::待つ($2, 300);
    bev::歩く($0, "G");
    bev::歩く($2, "H");
    ev::BGMStop(2000);
    bev::フェードアウト(2000);
    bev::終了();
}

event [6]() {
    ev::FlagEntry("カラム味方");
    ev::FlagEntry("戦闘会話");
}

event [7]() {
    ev::ChapterSetWinRule(262144);
    ev::PersonLoad(ev::ChapterGetName());
    ev::TerrainLoad(ev::ChapterGetName());
    ev::DisposLoad(ev::ChapterGetName());
    ev::Dispos("Player", 4);
    ev::Dispos("Enemy", 4);
    ev::ForceUnitSetDontAttack(1, "PID_カラム");
}

event [8]() {
    ev::DisposFree();
    ev::TerrainFree();
    ev::PersonFree(ev::ChapterGetName());
}

event [9]() {
    bev::B003_OP1();
    bev::B003_OP1_TUT();
}

event [10]() {}

event [11]() {
    bev::B003_ED1();
    ev::TutorialSetFlag("TUTID_特効");
    ev::TutorialSetFlag("TUTID_共闘");
    ev::TutorialSetFlag("TUTID_カギ");
    ev::TutorialSetFlag("TUTID_支援");
    ev::ChapterSetNextIncrement();
}

event [12](1, 1, 0) {
    ev::TutorialHideUnited(1);
    $0 = ev::UnitGetByPID("PID_003_ボス");
    ev::CameraSetPosition(ev::UnitGetX($0), ev::UnitGetY($0));
    ev::CameraWait();
    ev::TimeWait(500);
    ev::Talk("MID_003_OP2");
    $1 = ev::UnitGetByPID("PID_クロム");
    ev::CameraSetPosition(ev::UnitGetX($1), ev::UnitGetY($1));
    ev::CameraWait();
    ev::TimeWait(500);
    ev::Talk("MID_003_OP2_01");
    ev::Talk("MID_003_OP2_02");
    ev::EnvSEOff(1000);
    ev::PlayMovieReturnFadeOut("Movie05.moflex");
    ev::EnvSEOn(1000);
    ev::Dispos("Support01", 4);
    ev::UnitUnitedExec(ev::UnitGetByPID("PID_スミア"), ev::UnitGetByPID("PID_クロム"));
    ev::FadeIn(3, 0, 500);
    ev::FadeWait();
    ev::Talk("MID_003_OP3");
    ev::Talk("MID_003_OP3_02");
    ev::UnitUnitedDrop(ev::UnitGetByPID("PID_スミア"), 11, 15);
}

event [12](2, 2, 2) {
    $0 = ev::UnitGetByPID("PID_カラム");
    if($0 && ev::UnitIsAlive($0)) {
        if(ev::UnitGetForce($0) == 2) {
            ev::CameraSetPosition(ev::UnitGetX($0), ev::UnitGetY($0));
            ev::CameraWait();
            ev::TimeWait(500);
            ev::Talk("MID_003_EV2");
        }
    }
}

event [14](1, 1, "bev::フェードイン") {
    ev::Talk("MID_003_TUT_特効");
    ev::TutorialShow("TUTID_特効");
}

event [14](2, 2, "bev::フェードイン") {
    ev::Talk("MID_003_EV1");
    ev::TutorialShow("TUTID_共闘");
    ev::TutorialHideUnited(0);
}

event [14](4, 4, "bev::フェードイン") {
    ev::Talk("MID_003_EV_支援");
    ev::TutorialShow("TUTID_支援");
}

func ev::IsTutorialKey() {
    if(ev::TutorialGetFlag("TUTID_カギ")) {
        return;
    }
    if(!ev::UnitGetByPID("PID_003_傭兵_落下")) {
        return 1;
    }
    if(!ev::UnitGetByPID("PID_003_アーチャー_落下")) {
        return 1;
    }
    return;
}

event [16](-1, -1, -1, -1, -1, "IsTutorialKey") {
    ev::Talk("MID_003_TUT_カギ");
    ev::TutorialShow("TUTID_カギ");
}

event [18]("PID_クロム", "PID_カラム", "bev::フェードイン", "カラム味方") {
    ev::Talk("MID_003_TK1");
    $0 = ev::UnitGetByPID("PID_カラム");
    ev::UnitTransferByIndex($0, 0);
    ev::FlagSet("カラム味方");
    ev::ForceUnitSetDontAttack(1, "");
}

event [19]("PID_003_ボス", "", 1, "戦闘会話") {
    ev::Talk("MID_003_BT1");
    ev::FlagSet("戦闘会話");
}

event [21]("PID_003_ボス", 1, "") {
    ev::Talk("MID_003_BOSS_DIE1");
}

event [21]("PID_カラム", 2, "") {
    ev::Talk("MID_003_DIE_カラム");
}

func ev::CantDoorOpen() {
    if(ev::TrickTst(2, 7, 14, 2)) {
        return;
    }
    if(ev::TrickTst(20, 7, 14, 2)) {
        return;
    }
    if(ev::UnitGetByPID("PID_003_傭兵_落下")) {
        return;
    }
    if(ev::UnitGetByPID("PID_003_アーチャー_落下")) {
        return;
    }
    if(ev::TransporterItemIsExist("IID_扉の鍵")) {
        return;
    }
    if(ev::ForceUnitItemIsExist(0, "IID_扉の鍵")) {
        return;
    }
    return 1;
}

event [16](-1, -1, -1, -1, -1, "CantDoorOpen") {
    ev::SkipEscape();
    ev::Talk("MID_003_GAMEOVER");
    ev::FlagSet("S_GameOver");
}
